arr_list_main.c
    - 배열을 이용한 링크드 리스트의 구현
    - 데이터를 나란히 저장한다. 중복된 데이터의 저장을 막지 않는다.
    - 리스트 자료구조의 ADT(기능)
        1. 데이터의 입력(삽입)
        2. 데이터의 출력
        2. 삭제
        3. 전체 데이터의 갯수 조회
    
?? 배열에서 인덱스가 아닌 커서 위치로 데이터를 참조하는 이유는? 나중에 다른데 써먹으려고 하나?

단점
- 배열의 길이가 초기에 정해져야 된다. 변경 불가능
- 삭제의 과정에서 데이터의 이동(복사)가 매우 빈번히 일어남

장점
- 데이터의 참조가 쉽다. 인데스 값을 기준으로 어디든 한 번에 참조가 가능
